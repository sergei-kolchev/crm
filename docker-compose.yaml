version: "2.2"

services:
  redis:
    container_name: crm_redis
    image: redis
    restart: always
    env_file:
      - crm/.env
    expose:
      - 6739

  postgres:
    container_name: crm_postgres
    image: postgres
    env_file:
      - crm/.env
    restart: always
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: crm_rabbitmq
    env_file:
      - crm/.env
    expose:
      - 5672
      - 15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq/data

  celery:
    build:
      context: .
    container_name: crm_celery
    entrypoint: /crm/docker/celery.sh
    env_file:
      - crm/.env
    restart: always
    depends_on:
      - redis
      - rabbitmq
      - crm
    volumes:
      - tmp_volume:/tmp

  crm:
    image: crm
    build:
      context: .
    container_name: crm
    env_file:
      - crm/.env
    entrypoint: /crm/docker/crm.sh
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - static_volume:/crm/static
      - media_volume:/crm/media
      - tmp_volume:/tmp
    expose:
      - 8000

  nginx:
    build:
      context: ./nginx
    container_name: crm_nginx
    restart: always
    volumes:
      - static_volume:/crm/static
      - media_volume:/crm/media
    ports:
      - 443:443
    depends_on:
      - crm

volumes:
  pgdata:
  redisdata:
  rabbitmq:
  static_volume:
  media_volume:
  tmp_volume:
